// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListAllChecksHandlerFunc turns a function with the right signature into a list all checks handler
type ListAllChecksHandlerFunc func(ListAllChecksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListAllChecksHandlerFunc) Handle(params ListAllChecksParams) middleware.Responder {
	return fn(params)
}

// ListAllChecksHandler interface for that can handle valid list all checks params
type ListAllChecksHandler interface {
	Handle(ListAllChecksParams) middleware.Responder
}

// NewListAllChecks creates a new http.Handler for the list all checks operation
func NewListAllChecks(ctx *middleware.Context, handler ListAllChecksHandler) *ListAllChecks {
	return &ListAllChecks{Context: ctx, Handler: handler}
}

/* ListAllChecks swagger:route GET /check listAllChecks

List all checks

*/
type ListAllChecks struct {
	Context *middleware.Context
	Handler ListAllChecksHandler
}

func (o *ListAllChecks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListAllChecksParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
